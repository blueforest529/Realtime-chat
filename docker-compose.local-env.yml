version: '3'

services:
  mysql:
    image: mysql:8.1.0
    container_name: ms01
    environment:
      - MYSQL_ROOT_PASSWORD=admin
      - MYSQL_DATABASE=speakly
      - MYSQL_USER=speakly
      - MYSQL_PASSWORD=speakly
    ports:
      - '3306:3306'
    volumes:
      - ./local-data/mysql:/var/lib/mysql
    networks:
      - mysql

  redis:
    image: redis:7.0.12-alpine
    container_name: rd01
    ports:
      - '6379:6379'

  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    container_name: zk01
    ports:
      - '32181:32181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000

  kafka-1:
    image: confluentinc/cp-kafka:latest
    container_name: kf01
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper-1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:32181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:29092,EXTERNAL://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      # KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 4

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: ku01
    ports:
      - '8989:8080'
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka-1:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper-1:32181

  elastic-1:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.1
    container_name: es01
    ports:
      - '9200:9200'
    networks:
      - elastic
    deploy:
      resources:
        limits:
          memory: 1g
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false # X-Pack 보안 비활성화
      - xpack.security.enrollment.enabled=false # 불필요한 경우 생략 가능

networks:
  mysql:
    driver: bridge
  elastic:
    driver: bridge
